<?php

declare(strict_types=1);

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use Illuminate\Foundation\Auth\VerifiesEmails;

/**
 * Email Verification Controller
 *
 * This controller handles the email verification process for users who have
 * recently registered. It uses the VerifiesEmails trait to include the methods
 * for sending verification emails and confirming email addresses.
 */
class VerificationController extends Controller
{
    use VerifiesEmails;

    /**
     * The path to redirect users after successful email verification.
     *
     * vendor\laravel\ui\auth-backend\RedirectsUsers.php - is trait in the `VerifiesEmails` trait
     * The `redirectPath` method checks if the `redirectTo` method is defined in the controller.
     * If `redirectTo` is defined, it will return the path specified in that method.
     * If not, it checks for the `redirectTo` property and returns its value.
     * If neither is found, it defaults to `/home`.
     */
    // protected string $redirectTo = RouteServiceProvider::HOME;

    /**
     * Create a new controller instance.
     *
     * This constructor sets up middleware to ensure:
     * - The user is authenticated before verifying their email.
     * - The verification link is signed to prevent tampering.
     * - Throttling on verification and resend actions to prevent abuse.
     *
     * @return void
     */
    public function __construct()
    {
        // Ensures the user is authenticated before accessing any methods
        $this->middleware('auth');

        // Apply the 'signed' middleware only to the 'verify' route.
        // The 'signed' middleware ensures that the incoming request has a valid signature, which is typically used
        // for verifying that the URL was generated by the application itself and not tampered with.
        $this->middleware('signed')->only('verify');

        // Limits the rate at which verification and resend requests can be made
        $this->middleware('throttle:6,1')->only('verify', 'resend');
    }

    /**
     * Define the redirect path after verification.
     *
     * This method dynamically determines the redirect path based on user roles.
     * Is used instad of hardcoding the 'protected string $redirectTo'
     *
     * vendor\laravel\ui\auth-backend\RedirectsUsers.php - is trait in the `VerifiesEmails` trait
     * The `redirectPath` method checks if the `redirectTo` method is defined in the controller.
     * If `redirectTo` is defined, it will return the path specified in that method.
     * If not, it checks for the `redirectTo` property and returns its value.
     * If neither is found, it defaults to `/home`.
     */
    protected function redirectTo(): string
    {
        // Redirect based on role or other criteria
        return auth()->user()->isAdmin()
            ? route('admin.dashboard') // Redirect admins to the admin dashboard
            : route('cabinet.adverts.index'); // Redirect regular users to their dashboard
    }
}
